// import logo from './logo.svg';
// import './App.css';
import React, { useEffect, useState } from "react";
import { vote, getVotes, getCandidates } from "./VotingInterface";

function App() {
  const [candidates, setCandidates] = useState([]);
  const [votes, setVotes] = useState({});
  const [status, setStatus] = useState("");
  const [loading, setLoading] = useState(false);
  const [account, setAccount] = useState(null);

  const loadCandidates = async () => {
    try {
      const list = await getCandidates();
      setCandidates(list);

      const votesObj = {};
      for (const name of list) {
        const v = await getVotes(name);
        votesObj[name] = v.toString();
      }
      setVotes(votesObj);
    } catch (err) {
      console.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤:", err);
      alert("–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ MetaMask —ñ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ—ó –º–µ—Ä–µ–∂—ñ");
    }
  };

  const handleVote = async (candidate) => {
    try {
      setLoading(true);
      setStatus(`–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –∑–∞ ${candidate}...`);
      await vote(candidate);
      setStatus(`‚úÖ –ì–æ–ª–æ—Å –∑–∞ ${candidate} –ø—Ä–∏–π–Ω—è—Ç–æ`);
      await loadCandidates();
    } catch (err) {
      console.error(err);
      setStatus("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—ñ –∞–±–æ –≤–∂–µ –≥–æ–ª–æ—Å—É–≤–∞–ª–∏.");
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    async function init() {
      try {
        const [selected] = await window.ethereum.request({ method: "eth_requestAccounts" });
        setAccount(selected);
        await loadCandidates();
      } catch (err) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:", err);
      }
    }

    init();

    if (window.ethereum) {
      window.ethereum.on("accountsChanged", (accs) => {
        setAccount(accs[0]);
        loadCandidates();
      });
    }
  }, []);

  return (
    <div style={{ padding: "2rem", fontFamily: "sans-serif" }}>
      <h2>üó≥Ô∏è –ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–µ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è</h2>
      {account && (
        <p>üë§ –ê–∫–∞—É–Ω—Ç: <strong>{account}</strong></p>
      )}
      {candidates.length === 0 && <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤...</p>}
      {candidates.map((name) => (
        <div key={name} style={{ marginBottom: "1rem" }}>
          <strong>{name}</strong>: {votes[name] || 0} –≥–æ–ª–æ—Å—ñ–≤
          <br />
          <button
            onClick={() => handleVote(name)}
            disabled={loading}
            style={{ marginTop: "0.5rem" }}
          >
            –ì–æ–ª–æ—Å—É–≤–∞—Ç–∏
          </button>
        </div>
      ))}
      {status && <p><em>{status}</em></p>}
    </div>
  );
}

export default App;
